spring.application.name=course-spring-data-jpa-example


# data source
spring.datasource.url=jdbc:mysql://localhost:3306/spring-jpa
spring.datasource.username = root
#spring.datasource.password =
# spring.datasource.driver-class-name=com.mysql.jdbc.cj.Driver

# jpa or hibernate configurations
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format-sql = true
spring.jpa.hibernate.ddl-auto=update


#1. none -- Hibernate will not manage
#2. validate -- Hibernate will validate the schema against your entities but will not make any changes
#3. update -- Hibernate will modify the schema to match the entity definitions but will not drop any existing table
#4. create -- Hibernate will create the schema every time the application starts.
#5. create-drop -- Similar to create, but the schema is dropped automatically when the application shuts down

# spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQLDialect

# a dialect refers to the specific SQL variant that
# Hibernate uses to interact with a particular database.
# Each database has its own syntax and features,
# and Hibernate uses dialects to generate database-specific SQL commands.


